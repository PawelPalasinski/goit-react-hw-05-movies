{"version":3,"file":"static/js/380.736817b1.chunk.js","mappings":"wOACA,EAAuB,+BAAvB,EAA8D,gCAA9D,EAAuG,iCAAvG,EAA+I,+B,SCuD/I,EAnDwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GACLI,KAAKL,GACLM,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,EACzB,GACJ,GAAE,CAACN,KAGF,8BACGF,IACC,iCACE,iBAAKW,UAAWC,EAAhB,WACE,0BACGZ,EAASa,MADZ,KACqBb,EAASc,aAAaC,MAAM,EAAG,GADpD,QAGA,uBACGC,KAAKC,MAAiD,KAA1CjB,EAASkB,aAAeC,OAAOC,UAAkB,OAEhE,gBACEC,IAAG,yCAAoCrB,EAASsB,aAChDC,IAAKvB,EAASa,YAIlB,iBAAKF,UAAWC,EAAhB,WACE,uCACA,uBAAIZ,EAASwB,YACb,qCACA,eAAIb,UAAWC,EAAf,SAA0BZ,EAASyB,OAAOC,KAAI,SAAAC,GAAK,OAAI,eAAIC,IAAKD,EAAME,UAAf,SAA2BF,EAAMG,MAArC,OAEnD,SAAC,KAAD,CAAMC,GAAE,kBAAa7B,EAAb,YAA2BS,UAAWC,EAAQoB,MAAOnC,EAASmC,MAAtE,sBAGA,SAAC,KAAD,CAAMD,GAAE,kBAAa7B,EAAb,SAAwBS,UAAWC,EAAQoB,MAAOnC,EAASmC,MAAnE,mBAIA,SAAC,KAAD,WAMX,C","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/Components/MovieDetailsList.module.css?2ba6","pages/MovieDetailsPage/Components/MovieDetailsList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"left\":\"MovieDetailsList_left__1Y5Ph\",\"right\":\"MovieDetailsList_right__zt4w-\",\"genres\":\"MovieDetailsList_genres__fbltE\",\"link\":\"MovieDetailsList_link__GSRYO\"};","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getById } from '../../../services/api';\nimport s from './MovieDetailsList.module.css';\n\nconst MovieSearchList = () => {\n  const location = useLocation();\n  const [moviesId, setIdInfo] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getById(id)\n      .then(setIdInfo)\n      .catch(function (error) {\n        console.log('Error: ' + error);\n      });\n  }, [id]);\n\n  return (\n    <>\n      {moviesId && (\n        <>\n          <div className={s.left}>\n            <h2>\n              {moviesId.title} ({moviesId.release_date.slice(0, 4)})\n            </h2>\n            <p>\n              {Math.round((moviesId.vote_average + Number.EPSILON) * 100) / 100}\n            </p>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${moviesId.poster_path}`}\n              alt={moviesId.title}\n            />\n          </div>\n\n          <div className={s.right}>\n            <h3>Overview:</h3>\n            <p>{moviesId.overview}</p>\n            <h3>Genres:</h3>\n            <ul className={s.genres}>{moviesId.genres.map(genre => <li ket={genre.genre_ids}>{genre.name}</li>)}</ul>\n\n            <Link to={`/movies/${id}/reviews`} className={s.link} state={location.state}>\n              Reviews\n            </Link>\n            <Link to={`/movies/${id}/cast`} className={s.link} state={location.state}>\n              Cast\n            </Link>\n\n            <Outlet />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieSearchList;\n"],"names":["location","useLocation","useState","moviesId","setIdInfo","id","useParams","useEffect","getById","then","catch","error","console","log","className","s","title","release_date","slice","Math","round","vote_average","Number","EPSILON","src","poster_path","alt","overview","genres","map","genre","ket","genre_ids","name","to","state"],"sourceRoot":""}